//Cirella Smith
//Lab 9
//November 27, 2022
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Lab9Arrays
{
    internal class Program
    {
        static void Main(string[] args)
        {
            //Number 1
            //create an array with the given size and fill that array with random numbers between 0 and 99 and return it
            //no display
            int[] array = CreateRandomArray(11);
            //Number 2
            Console.WriteLine("---Number 2---");
            //use method 2 to display the RANDOM array generated by #1- display each element and index
            DisplayArray(array);
            //Number 3
            Console.WriteLine("---Number 3---");
            //Call method prob 3 and pass it a string of your choice
            string word = "Hello";
            Problem3 (word);
            //Number 4
            Console.WriteLine("---Number 4---");
            //call method prob 4 to search the string for character "a" and display the results to the console
            int result4 = Problem4("Hello", 'a');
            Console.WriteLine($"Hello: {result4}");
            int result4a = Problem4("Happy", 'a');
            Console.WriteLine($"Happy: {result4a}");
            //Number 5
            Console.WriteLine("---Number 5---");
            //call the method prob 5 and display the return, pass the random array created for #1 as a parameter
            double Avg5 = Problem5(array);
            Console.WriteLine($"{Avg5}");
            //Number 6
            Console.WriteLine("---Number 6---");
            //call the method prob 6 and display the return, pass the random array created for #1 as a parameter
            int index6 = Problem6(array);
            Console.WriteLine($"{index6}");
            //Number 7
            Console.WriteLine("---Number 7---");
            //call the method prob 7 and display the return
            double[] array7 = new double[5] { 4.3, 7.5, 12.2, 6.8, 13.7 };
            Problem7(array7);

            Console.ReadLine();

        }

        //prob 1: create a method that takes an int size as a parameter and returns an int[]
        static int[] CreateRandomArray(int size)
        {
            //create an int array of given size
            int[] numbers = new int[size];
            //create a new instance of random class
            Random random = new Random();
            //loop
            //foreach cannot change the array
            for (int i = 0; i < numbers.Length; i++)
            {
                //set each element to a random number between 0 and 99
                numbers[i] = random.Next(100);
            }
            return numbers;
        }

        //prob 2: create a method that takes an int[] as a parameter and displays each element and index to the console
        static void DisplayArray(int[] array)
        {
            for (int i = 0; i < array.Length; i++)
            {
                Console.WriteLine($"{array[i]} at index {i}");
            }
        }

        //prob 3: create a method that takes a string as a parameter and displays each element and index to the console
        static void Problem3(string hello)
        {
            for (int i = 0; i < hello.Length; i++)
            {
                Console.WriteLine($"{hello[i]} at index {i}");
            }
        }

        //prob 4: create a method that takes a string and a char searchValue as parameters
        //the method will look thru the string and see if any elements match the search value
        //return the first index of the element which matches the SearchValue
        //if none match, return -1
        static int Problem4(string takeInput, char searchValue)
        {
            for (int i = 0; i < takeInput.Length; i++)
            {
                if (takeInput[i] == searchValue)
                {
                    return i;
                }
                continue;
            }
            return -1;
        }

        //prob 5: create a method that takes and int[] as a parameter and returns the average value of each element in the array
        static double Problem5(int[] array)
        {
            int total = 0;
            foreach (int x in array)
            {
                total += x;
                continue;
            }
            double average = total / (double)array.Length;
            return average;
        }

        //prob 6: create a method that takes an int[] as a parameter and returns the index of the largest value in the array
        static int Problem6(int[] array)
        {
            for (int i = 0; i < array.Length - 1; i++)
            {
                if (array[i+1] > array[i])
                {
                    continue;
                }
                return i;
            }
            return array.Length - 1;
        }

        ////prob 7: create a method that takes a double[] as a parameter and returns the array reversed
        static void Problem7(double[] array)
        {
            for(int i = array.Length-1; i >= 0; i--)
            {
                Console.WriteLine($"{array[i]}");
            }
        }


    }
}
